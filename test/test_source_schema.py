# coding: utf-8

"""
    OpenAlex

    ![](https://raw.githubusercontent.com/ourresearch/openalex-docs/main/.gitbook/assets/OpenAlex-logo-5.png)  **OpenAlex** is a fully open catalog of the global research system.  It's named after the [ancient Library of Alexandria](https://en.wikipedia.org/wiki/Library_of_Alexandria) and made by the nonprofit [OurResearch](https://ourresearch.org/).  This OpenAPI specification is derived from spec generated by [openapi-devtools](https://github.com/AndrewWalsh/openapi-devtools).

    The version of the OpenAPI document: 0.0.4-3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from mearman_openalex_api.models.source_schema import SourceSchema

class TestSourceSchema(unittest.TestCase):
    """SourceSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SourceSchema:
        """Test SourceSchema
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SourceSchema`
        """
        model = SourceSchema()
        if include_optional:
            return SourceSchema(
                abbreviated_title = None,
                alternate_titles = None,
                apc_prices = {
                    'key' : null
                    },
                apc_usd = None,
                cited_by_count = None,
                country_code = None,
                counts_by_year = None,
                created_date = None,
                display_name = None,
                homepage_url = None,
                host_organization = None,
                host_organization_lineage = None,
                host_organization_name = None,
                id = None,
                ids = mearman_openalex_api.models.ids.ids(
                    crossref = null, 
                    doi = null, 
                    fatcat = null, 
                    grid = null, 
                    issn = null, 
                    issn_l = null, 
                    mag = null, 
                    openalex = null, 
                    orcid = null, 
                    pmcid = null, 
                    pmid = null, 
                    ror = null, 
                    scopus = null, 
                    wikidata = null, 
                    wikipedia = null, ),
                is_in_doaj = None,
                is_oa = None,
                issn = None,
                issn_l = None,
                societies = None,
                summary_stats = mearman_openalex_api.models.summary_stats.summary_stats(
                    2yr_mean_citedness = null, 
                    h_index = null, 
                    i10_index = null, ),
                type = None,
                updated_date = None,
                works_api_url = None,
                works_count = None,
                x_concepts = None
            )
        else:
            return SourceSchema(
                display_name = None,
                id = None,
        )
        """

    def testSourceSchema(self):
        """Test SourceSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
